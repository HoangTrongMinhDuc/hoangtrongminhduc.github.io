<ul><li><a class="l" href="#pf1" data-dest-detail='[1,"FitH",336]'>Clean Code</a></li><li><a class="l" href="#pf8" data-dest-detail='[8,"XYZ",-88,589,1]'>Contents</a></li><li><a class="l" href="#pf14" data-dest-detail='[20,"FitH",593]'>Foreword</a></li><li><a class="l" href="#pf18" data-dest-detail='[24,"XYZ",-44,-750,1.25]'>Introduction</a></li><li><a class="l" href="#pf1e" data-dest-detail='[30,"XYZ",-48,671,1]'>On the Cover</a></li><li><a class="l" href="#pfb1" data-dest-detail='[177,"FitH",287]'>cp</a></li><li><a class="l" href="#pf20" data-dest-detail='[32,"XYZ",-48,671,1]'>Chapter 1: Clean Code</a><ul><li><a class="l" href="#pf21" data-dest-detail='[33,"XYZ",-48,671,1]'>There Will Be Code</a></li><li><a class="l" href="#pf22" data-dest-detail='[34,"XYZ",-48,671,1]'>Bad Code</a></li><li><a class="l" href="#pf23" data-dest-detail='[35,"XYZ",-48,671,1]'>The Total Cost of Owning a Mess</a><ul><li><a class="l" href="#pf24" data-dest-detail='[36,"XYZ",-48,671,1]'>The Grand Redesign in the Sky</a></li><li><a class="l" href="#pf24" data-dest-detail='[36,"XYZ",-48,454,1]'>Attitude</a></li><li><a class="l" href="#pf25" data-dest-detail='[37,"XYZ",-48,671,1]'>The Primal Conundrum</a></li><li><a class="l" href="#pf25" data-dest-detail='[37,"XYZ",-48,454,1]'>The Art of Clean Code?</a></li><li><a class="l" href="#pf26" data-dest-detail='[38,"XYZ",-48,671,1]'>What Is Clean Code?</a></li></ul></li><li><a class="l" href="#pf2b" data-dest-detail='[43,"XYZ",-48,671,1]'>Schools of Thought</a></li><li><a class="l" href="#pf2c" data-dest-detail='[44,"XYZ",-48,454,1]'>We Are Authors</a></li><li><a class="l" href="#pf2d" data-dest-detail='[45,"XYZ",-48,454,1]'>The Boy Scout Rule</a></li><li><a class="l" href="#pf2e" data-dest-detail='[46,"XYZ",-48,671,1]'>Prequel and Principles</a></li><li><a class="l" href="#pf2e" data-dest-detail='[46,"XYZ",-48,639,1]'>Conclusion</a></li><li><a class="l" href="#pf2e" data-dest-detail='[46,"XYZ",-48,454,1]'>Bibliography</a></li></ul></li><li><a class="l" href="#pf30" data-dest-detail='[48,"XYZ",-48,671,1]'>Chapter 2: Meaningful Names</a><ul><li><a class="l" href="#pf30" data-dest-detail='[48,"XYZ",-48,454,1]'>Introduction</a></li><li><a class="l" href="#pf31" data-dest-detail='[49,"XYZ",-48,671,1]'>Use Intention-Revealing Names</a></li><li><a class="l" href="#pf32" data-dest-detail='[50,"XYZ",-48,454,1]'>Avoid Disinformation</a></li><li><a class="l" href="#pf33" data-dest-detail='[51,"XYZ",-48,454,1]'>Make Meaningful Distinctions</a></li><li><a class="l" href="#pf34" data-dest-detail='[52,"XYZ",-48,454,1]'>Use Pronounceable Names</a></li><li><a class="l" href="#pf35" data-dest-detail='[53,"XYZ",-48,454,1]'>Use Searchable Names</a></li><li><a class="l" href="#pf36" data-dest-detail='[54,"XYZ",-48,671,1]'>Avoid Encodings</a><ul><li><a class="l" href="#pf36" data-dest-detail='[54,"XYZ",-48,454,1]'>Hungarian Notation</a></li><li><a class="l" href="#pf37" data-dest-detail='[55,"XYZ",-48,671,1]'>Member Prefixes</a></li><li><a class="l" href="#pf37" data-dest-detail='[55,"XYZ",-48,454,1]'>Interfaces and Implementations</a></li></ul></li><li><a class="l" href="#pf38" data-dest-detail='[56,"XYZ",-48,671,1]'>Avoid Mental Mapping</a></li><li><a class="l" href="#pf38" data-dest-detail='[56,"XYZ",-48,486,1]'>Class Names</a></li><li><a class="l" href="#pf38" data-dest-detail='[56,"XYZ",-48,454,1]'>Method Names</a></li><li><a class="l" href="#pf39" data-dest-detail='[57,"XYZ",-48,671,1]'>Don&apos;t Be Cute</a></li><li><a class="l" href="#pf39" data-dest-detail='[57,"XYZ",-48,639,1]'>Pick One Word per Concept</a></li><li><a class="l" href="#pf39" data-dest-detail='[57,"XYZ",-48,454,1]'>Don&apos;t Pun</a></li><li><a class="l" href="#pf3a" data-dest-detail='[58,"XYZ",-48,671,1]'>Use Solution Domain Names</a></li><li><a class="l" href="#pf3a" data-dest-detail='[58,"XYZ",-48,486,1]'>Use Problem Domain Names</a></li><li><a class="l" href="#pf3a" data-dest-detail='[58,"XYZ",-48,454,1]'>Add Meaningful Context</a></li><li><a class="l" href="#pf3c" data-dest-detail='[60,"XYZ",-48,454,1]'>Don&apos;t Add Gratuitous Context</a></li><li><a class="l" href="#pf3d" data-dest-detail='[61,"XYZ",-48,671,1]'>Final Words</a></li></ul></li><li><a class="l" href="#pf3e" data-dest-detail='[62,"XYZ",-48,671,1]'>Chapter 3: Functions</a><ul><li><a class="l" href="#pf41" data-dest-detail='[65,"XYZ",-48,671,1]'>Small!</a><ul><li><a class="l" href="#pf42" data-dest-detail='[66,"XYZ",-48,671,1]'>Blocks and Indenting</a></li></ul></li><li><a class="l" href="#pf42" data-dest-detail='[66,"XYZ",-48,454,1]'>Do One Thing</a><ul><li><a class="l" href="#pf43" data-dest-detail='[67,"XYZ",-48,486,1]'>Sections within Functions</a></li></ul></li><li><a class="l" href="#pf43" data-dest-detail='[67,"XYZ",-48,454,1]'>One Level of Abstraction per Function</a><ul><li><a class="l" href="#pf44" data-dest-detail='[68,"XYZ",-48,671,1]'>Reading Code from Top to Bottom: The Stepdown Rule</a></li></ul></li><li><a class="l" href="#pf44" data-dest-detail='[68,"XYZ",-48,454,1]'>Switch Statements</a></li><li><a class="l" href="#pf46" data-dest-detail='[70,"XYZ",-48,454,1]'>Use Descriptive Names</a></li><li><a class="l" href="#pf47" data-dest-detail='[71,"XYZ",-48,671,1]'>Function Arguments</a><ul><li><a class="l" href="#pf48" data-dest-detail='[72,"XYZ",-48,671,1]'>Common Monadic Forms</a></li><li><a class="l" href="#pf48" data-dest-detail='[72,"XYZ",-48,454,1]'>Flag Arguments</a></li><li><a class="l" href="#pf49" data-dest-detail='[73,"XYZ",-48,671,1]'>Dyadic Functions</a></li><li><a class="l" href="#pf49" data-dest-detail='[73,"XYZ",-48,454,1]'>Triads</a></li><li><a class="l" href="#pf4a" data-dest-detail='[74,"XYZ",-48,671,1]'>Argument Objects</a></li><li><a class="l" href="#pf4a" data-dest-detail='[74,"XYZ",-48,639,1]'>Argument Lists</a></li><li><a class="l" href="#pf4a" data-dest-detail='[74,"XYZ",-48,454,1]'>Verbs and Keywords</a></li></ul></li><li><a class="l" href="#pf4b" data-dest-detail='[75,"XYZ",-48,671,1]'>Have No Side Effects</a><ul><li><a class="l" href="#pf4c" data-dest-detail='[76,"XYZ",-48,671,1]'>Output Arguments</a></li></ul></li><li><a class="l" href="#pf4c" data-dest-detail='[76,"XYZ",-48,454,1]'>Command Query Separation</a></li><li><a class="l" href="#pf4d" data-dest-detail='[77,"XYZ",-48,671,1]'>Prefer Exceptions to Returning Error Codes</a><ul><li><a class="l" href="#pf4d" data-dest-detail='[77,"XYZ",-48,454,1]'>Extract Try/Catch Blocks</a></li><li><a class="l" href="#pf4e" data-dest-detail='[78,"XYZ",-48,671,1]'>Error Handling Is One Thing</a></li><li><a class="l" href="#pf4e" data-dest-detail='[78,"XYZ",-48,454,1]'>The Error.java Dependency Magnet</a></li></ul></li><li><a class="l" href="#pf4f" data-dest-detail='[79,"XYZ",-48,671,1]'>Don&apos;t Repeat Yourself</a></li><li><a class="l" href="#pf4f" data-dest-detail='[79,"XYZ",-48,454,1]'>Structured Programming</a></li><li><a class="l" href="#pf50" data-dest-detail='[80,"XYZ",-48,671,1]'>How Do You Write Functions Like This?</a></li><li><a class="l" href="#pf50" data-dest-detail='[80,"XYZ",-48,454,1]'>Conclusion</a></li><li><a class="l" href="#pf51" data-dest-detail='[81,"XYZ",-48,671,1]'>SetupTeardownIncluder</a></li><li><a class="l" href="#pf53" data-dest-detail='[83,"XYZ",-48,671,1]'>Bibliography</a></li></ul></li><li><a class="l" href="#pf54" data-dest-detail='[84,"XYZ",-48,671,1]'>Chapter 4: Comments</a><ul><li><a class="l" href="#pf56" data-dest-detail='[86,"XYZ",-48,671,1]'>Comments Do Not Make Up for Bad Code</a></li><li><a class="l" href="#pf56" data-dest-detail='[86,"XYZ",-48,639,1]'>Explain Yourself in Code</a></li><li><a class="l" href="#pf56" data-dest-detail='[86,"XYZ",-48,486,1]'>Good Comments</a><ul><li><a class="l" href="#pf56" data-dest-detail='[86,"XYZ",-48,454,1]'>Legal Comments</a></li><li><a class="l" href="#pf57" data-dest-detail='[87,"XYZ",-48,671,1]'>Informative Comments</a></li><li><a class="l" href="#pf57" data-dest-detail='[87,"XYZ",-48,454,1]'>Explanation of Intent</a></li><li><a class="l" href="#pf58" data-dest-detail='[88,"XYZ",-48,671,1]'>Clarification</a></li><li><a class="l" href="#pf59" data-dest-detail='[89,"XYZ",-48,671,1]'>Warning of Consequences</a></li><li><a class="l" href="#pf59" data-dest-detail='[89,"XYZ",-48,454,1]'>TODO Comments</a></li><li><a class="l" href="#pf5a" data-dest-detail='[90,"XYZ",-48,671,1]'>Amplification</a></li><li><a class="l" href="#pf5a" data-dest-detail='[90,"XYZ",-48,639,1]'>Javadocs in Public APIs</a></li></ul></li><li><a class="l" href="#pf5a" data-dest-detail='[90,"XYZ",-48,486,1]'>Bad Comments</a><ul><li><a class="l" href="#pf5a" data-dest-detail='[90,"XYZ",-48,454,1]'>Mumbling</a></li><li><a class="l" href="#pf5b" data-dest-detail='[91,"XYZ",-48,454,1]'>Redundant Comments</a></li><li><a class="l" href="#pf5e" data-dest-detail='[94,"XYZ",-48,671,1]'>Misleading Comments</a></li><li><a class="l" href="#pf5e" data-dest-detail='[94,"XYZ",-48,639,1]'>Mandated Comments</a></li><li><a class="l" href="#pf5e" data-dest-detail='[94,"XYZ",-48,454,1]'>Journal Comments</a></li><li><a class="l" href="#pf5f" data-dest-detail='[95,"XYZ",-48,454,1]'>Noise Comments</a></li><li><a class="l" href="#pf61" data-dest-detail='[97,"XYZ",-48,454,1]'>Scary Noise</a></li><li><a class="l" href="#pf62" data-dest-detail='[98,"XYZ",-48,671,1]'>Don&apos;t Use a Comment When You Can Use a Function or a Variable</a></li><li><a class="l" href="#pf62" data-dest-detail='[98,"XYZ",-48,639,1]'>Position Markers</a></li><li><a class="l" href="#pf62" data-dest-detail='[98,"XYZ",-48,454,1]'>Closing Brace Comments</a></li><li><a class="l" href="#pf63" data-dest-detail='[99,"XYZ",-48,671,1]'>Attributions and Bylines</a></li><li><a class="l" href="#pf63" data-dest-detail='[99,"XYZ",-48,454,1]'>Commented-Out Code</a></li><li><a class="l" href="#pf64" data-dest-detail='[100,"XYZ",-48,671,1]'>HTML Comments</a></li><li><a class="l" href="#pf64" data-dest-detail='[100,"XYZ",-48,454,1]'>Nonlocal Information</a></li><li><a class="l" href="#pf65" data-dest-detail='[101,"XYZ",-48,671,1]'>Too Much Information</a></li><li><a class="l" href="#pf65" data-dest-detail='[101,"XYZ",-48,486,1]'>Inobvious Connection</a></li><li><a class="l" href="#pf65" data-dest-detail='[101,"XYZ",-48,454,1]'>Function Headers</a></li><li><a class="l" href="#pf66" data-dest-detail='[102,"XYZ",-48,671,1]'>Javadocs in Nonpublic Code</a></li><li><a class="l" href="#pf66" data-dest-detail='[102,"XYZ",-48,639,1]'>Example</a></li></ul></li><li><a class="l" href="#pf69" data-dest-detail='[105,"XYZ",-48,454,1]'>Bibliography</a></li></ul></li><li><a class="l" href="#pf6a" data-dest-detail='[106,"FitH",668]'>Chapter 5: Formatting</a><ul><li><a class="l" href="#pf6b" data-dest-detail='[107,"XYZ",-48,671,1]'>The Purpose of Formatting</a></li><li><a class="l" href="#pf6b" data-dest-detail='[107,"XYZ",-48,454,1]'>Vertical Formatting</a><ul><li><a class="l" href="#pf6c" data-dest-detail='[108,"XYZ",-48,454,1]'>The Newspaper Metaphor</a></li><li><a class="l" href="#pf6d" data-dest-detail='[109,"XYZ",-48,671,1]'>Vertical Openness Between Concepts</a></li><li><a class="l" href="#pf6e" data-dest-detail='[110,"XYZ",-48,671,1]'>Vertical Density</a></li><li><a class="l" href="#pf6f" data-dest-detail='[111,"XYZ",-48,671,1]'>Vertical Distance</a></li><li><a class="l" href="#pf73" data-dest-detail='[115,"XYZ",-48,454,1]'>Vertical Ordering</a></li></ul></li><li><a class="l" href="#pf74" data-dest-detail='[116,"XYZ",-48,671,1]'>Horizontal Formatting</a><ul><li><a class="l" href="#pf75" data-dest-detail='[117,"XYZ",-48,671,1]'>Horizontal Openness and Density</a></li><li><a class="l" href="#pf76" data-dest-detail='[118,"XYZ",-48,671,1]'>Horizontal Alignment</a></li><li><a class="l" href="#pf77" data-dest-detail='[119,"XYZ",-48,671,1]'>Indentation</a></li><li><a class="l" href="#pf79" data-dest-detail='[121,"XYZ",-48,671,1]'>Dummy Scopes</a></li></ul></li><li><a class="l" href="#pf79" data-dest-detail='[121,"XYZ",-48,639,1]'>Team Rules</a></li><li><a class="l" href="#pf79" data-dest-detail='[121,"XYZ",-48,454,1]'>Uncle Bob&apos;s Formatting Rules</a></li></ul></li><li><a class="l" href="#pf7c" data-dest-detail='[124,"XYZ",-48,671,1]'>Chapter 6: Objects and Data Structures</a><ul><li><a class="l" href="#pf7c" data-dest-detail='[124,"XYZ",-48,454,1]'>Data Abstraction</a></li><li><a class="l" href="#pf7e" data-dest-detail='[126,"XYZ",-48,671,1]'>Data/Object Anti-Symmetry</a></li><li><a class="l" href="#pf80" data-dest-detail='[128,"XYZ",-48,454,1]'>The Law of Demeter</a><ul><li><a class="l" href="#pf81" data-dest-detail='[129,"XYZ",-48,671,1]'>Train Wrecks</a></li><li><a class="l" href="#pf82" data-dest-detail='[130,"XYZ",-48,671,1]'>Hybrids</a></li><li><a class="l" href="#pf82" data-dest-detail='[130,"XYZ",-48,639,1]'>Hiding Structure</a></li></ul></li><li><a class="l" href="#pf83" data-dest-detail='[131,"XYZ",-48,671,1]'>Data Transfer Objects</a><ul><li><a class="l" href="#pf84" data-dest-detail='[132,"XYZ",-48,671,1]'>Active Record</a></li></ul></li><li><a class="l" href="#pf84" data-dest-detail='[132,"XYZ",-48,486,1]'>Conclusion</a></li><li><a class="l" href="#pf84" data-dest-detail='[132,"XYZ",-48,454,1]'>Bibliography</a></li></ul></li><li><a class="l" href="#pf86" data-dest-detail='[134,"XYZ",-48,671,1]'>Chapter 7: Error Handling</a><ul><li><a class="l" href="#pf87" data-dest-detail='[135,"XYZ",-48,671,1]'>Use Exceptions Rather Than Return Codes</a></li><li><a class="l" href="#pf88" data-dest-detail='[136,"XYZ",-48,454,1]'>Write Your Try-Catch-Finally Statement First</a></li><li><a class="l" href="#pf89" data-dest-detail='[137,"XYZ",-48,454,1]'>Use Unchecked Exceptions</a></li><li><a class="l" href="#pf8a" data-dest-detail='[138,"XYZ",-48,486,1]'>Provide Context with Exceptions</a></li><li><a class="l" href="#pf8a" data-dest-detail='[138,"XYZ",-48,454,1]'>Define Exception Classes in Terms of a Caller&apos;s Needs</a></li><li><a class="l" href="#pf8c" data-dest-detail='[140,"XYZ",-48,671,1]'>Define the Normal Flow</a></li><li><a class="l" href="#pf8d" data-dest-detail='[141,"XYZ",-48,671,1]'>Don&apos;t Return Null</a></li><li><a class="l" href="#pf8e" data-dest-detail='[142,"XYZ",-48,454,1]'>Don&apos;t Pass Null</a></li><li><a class="l" href="#pf8f" data-dest-detail='[143,"XYZ",-48,486,1]'>Conclusion</a></li><li><a class="l" href="#pf8f" data-dest-detail='[143,"XYZ",-48,454,1]'>Bibliography</a></li></ul></li><li><a class="l" href="#pf90" data-dest-detail='[144,"XYZ",-48,671,1]'>Ch8: Boundaries</a><ul><li><a class="l" href="#pf91" data-dest-detail='[145,"XYZ",-48,671,1]'>Using Third-Party Code</a></li><li><a class="l" href="#pf93" data-dest-detail='[147,"XYZ",-48,671,1]'>Exploring and Learning Boundaries</a></li><li><a class="l" href="#pf93" data-dest-detail='[147,"XYZ",-48,454,1]'>Learning log4j</a></li><li><a class="l" href="#pf95" data-dest-detail='[149,"XYZ",-48,671,1]'>Learning Tests Are Better Than Free</a></li><li><a class="l" href="#pf95" data-dest-detail='[149,"XYZ",-48,454,1]'>Using Code That Does Not Yet Exist</a></li><li><a class="l" href="#pf97" data-dest-detail='[151,"XYZ",-48,671,1]'>Clean Boundaries</a></li><li><a class="l" href="#pf97" data-dest-detail='[151,"XYZ",-48,639,1]'>Bibliography</a></li></ul></li><li><a class="l" href="#pf98" data-dest-detail='[152,"XYZ",-48,671,1]'>Ch9: Unit Tests</a><ul><li><a class="l" href="#pf99" data-dest-detail='[153,"XYZ",-48,454,1]'>The Three Laws of TDD</a></li><li><a class="l" href="#pf9a" data-dest-detail='[154,"XYZ",-48,671,1]'>Keeping Tests Clean</a><ul><li><a class="l" href="#pf9b" data-dest-detail='[155,"XYZ",-48,671,1]'>Tests Enable the -ilities</a></li></ul></li><li><a class="l" href="#pf9b" data-dest-detail='[155,"XYZ",-48,454,1]'>Clean Tests</a><ul><li><a class="l" href="#pf9e" data-dest-detail='[158,"XYZ",-48,671,1]'>Domain-Specific Testing Language</a></li><li><a class="l" href="#pf9e" data-dest-detail='[158,"XYZ",-48,454,1]'>A Dual Standard</a></li></ul></li><li><a class="l" href="#pfa1" data-dest-detail='[161,"XYZ",-48,671,1]'>One Assert per Test</a><ul><li><a class="l" href="#pfa2" data-dest-detail='[162,"XYZ",-48,671,1]'>Single Concept per Test</a></li></ul></li><li><a class="l" href="#pfa3" data-dest-detail='[163,"XYZ",-48,671,1]'>F.I.R.S.T.</a></li><li><a class="l" href="#pfa4" data-dest-detail='[164,"XYZ",-48,671,1]'>Conclusion</a></li><li><a class="l" href="#pfa4" data-dest-detail='[164,"XYZ",-48,639,1]'>Bibliography</a></li></ul></li><li><a class="l" href="#pfa6" data-dest-detail='[166,"XYZ",-48,671,1]'>Ch10: Classes</a><ul><li><a class="l" href="#pfa7" data-dest-detail='[167,"XYZ",-48,671,1]'>Class Organization</a><ul><li><a class="l" href="#pfa7" data-dest-detail='[167,"XYZ",-48,639,1]'>Encapsulation</a></li></ul></li><li><a class="l" href="#pfa7" data-dest-detail='[167,"XYZ",-48,454,1]'>Classes Should Be Small!</a><ul><li><a class="l" href="#pfa9" data-dest-detail='[169,"XYZ",-48,454,1]'>The Single Responsibility Principle</a></li><li><a class="l" href="#pfab" data-dest-detail='[171,"XYZ",-48,671,1]'>Cohesion</a></li><li><a class="l" href="#pfac" data-dest-detail='[172,"XYZ",-48,671,1]'>Maintaining Cohesion Results in Many Small Classes</a></li></ul></li><li><a class="l" href="#pfb2" data-dest-detail='[178,"XYZ",-48,671,1]'>Organizing for Change</a><ul><li><a class="l" href="#pfb4" data-dest-detail='[180,"XYZ",-48,454,1]'>Isolating from Change</a></li></ul></li><li><a class="l" href="#pfb6" data-dest-detail='[182,"XYZ",-48,671,1]'>Bibliography</a></li></ul></li><li><a class="l" href="#pfb8" data-dest-detail='[184,"XYZ",-48,671,1]'>Chapter 11: Systems</a><ul><li><a class="l" href="#pfb9" data-dest-detail='[185,"XYZ",-48,671,1]'>How Would You Build a City?</a></li><li><a class="l" href="#pfb9" data-dest-detail='[185,"XYZ",-48,639,1]'>Separate Constructing a System from Using It</a><ul><li><a class="l" href="#pfba" data-dest-detail='[186,"XYZ",-48,486,1]'>Separation of Main</a></li><li><a class="l" href="#pfba" data-dest-detail='[186,"XYZ",-48,454,1]'>Factories</a></li><li><a class="l" href="#pfbc" data-dest-detail='[188,"XYZ",-48,671,1]'>Dependency Injection</a></li></ul></li><li><a class="l" href="#pfbc" data-dest-detail='[188,"XYZ",-48,454,1]'>Scaling Up</a><ul><li><a class="l" href="#pfbf" data-dest-detail='[191,"XYZ",-48,671,1]'>Cross-Cutting Concerns</a></li></ul></li><li><a class="l" href="#pfc0" data-dest-detail='[192,"XYZ",-48,671,1]'>Java Proxies</a></li><li><a class="l" href="#pfc2" data-dest-detail='[194,"XYZ",-48,671,1]'>Pure Java AOP Frameworks</a></li><li><a class="l" href="#pfc5" data-dest-detail='[197,"XYZ",-48,671,1]'>AspectJ Aspects</a></li><li><a class="l" href="#pfc5" data-dest-detail='[197,"XYZ",-48,454,1]'>Test Drive the System Architecture</a></li><li><a class="l" href="#pfc6" data-dest-detail='[198,"XYZ",-48,454,1]'>Optimize Decision Making</a></li><li><a class="l" href="#pfc7" data-dest-detail='[199,"XYZ",-48,671,1]'>Use Standards Wisely, When They Add Demonstrable Value</a></li><li><a class="l" href="#pfc7" data-dest-detail='[199,"XYZ",-48,454,1]'>Systems Need Domain-Specific Languages</a></li><li><a class="l" href="#pfc8" data-dest-detail='[200,"XYZ",-48,671,1]'>Conclusion</a></li><li><a class="l" href="#pfc8" data-dest-detail='[200,"XYZ",-48,454,1]'>Bibliography</a></li></ul></li><li><a class="l" href="#pfca" data-dest-detail='[202,"XYZ",-48,671,1]'>Chapter 12: Emergence</a><ul><li><a class="l" href="#pfca" data-dest-detail='[202,"XYZ",-48,454,1]'>Getting Clean via Emergent Design</a></li><li><a class="l" href="#pfcb" data-dest-detail='[203,"XYZ",-48,671,1]'>Simple Design Rule 1: Runs All the Tests</a></li><li><a class="l" href="#pfcb" data-dest-detail='[203,"XYZ",-48,454,1]'>Simple Design Rules 2–4: Refactoring</a></li><li><a class="l" href="#pfcc" data-dest-detail='[204,"XYZ",-48,671,1]'>No Duplication</a></li><li><a class="l" href="#pfce" data-dest-detail='[206,"XYZ",-48,671,1]'>Expressive</a></li><li><a class="l" href="#pfcf" data-dest-detail='[207,"XYZ",-48,671,1]'>Minimal Classes and Methods</a></li><li><a class="l" href="#pfcf" data-dest-detail='[207,"XYZ",-48,486,1]'>Conclusion</a></li><li><a class="l" href="#pfcf" data-dest-detail='[207,"XYZ",-48,454,1]'>Bibliography</a></li></ul></li><li><a class="l" href="#pfd0" data-dest-detail='[208,"XYZ",-48,671,1]'>Chapter 13: Concurrency</a><ul><li><a class="l" href="#pfd1" data-dest-detail='[209,"XYZ",-48,671,1]'>Why Concurrency?</a><ul><li><a class="l" href="#pfd2" data-dest-detail='[210,"XYZ",-48,671,1]'>Myths and Misconceptions</a></li></ul></li><li><a class="l" href="#pfd3" data-dest-detail='[211,"XYZ",-48,671,1]'>Challenges</a></li><li><a class="l" href="#pfd3" data-dest-detail='[211,"XYZ",-48,454,1]'>Concurrency Defense Principles</a><ul><li><a class="l" href="#pfd4" data-dest-detail='[212,"XYZ",-48,671,1]'>Single Responsibility Principle</a></li><li><a class="l" href="#pfd4" data-dest-detail='[212,"XYZ",-48,639,1]'>Corollary: Limit the Scope of Data</a></li><li><a class="l" href="#pfd4" data-dest-detail='[212,"XYZ",-48,454,1]'>Corollary: Use Copies of Data</a></li><li><a class="l" href="#pfd5" data-dest-detail='[213,"XYZ",-48,671,1]'>Corollary: Threads Should Be as Independent as Possible</a></li></ul></li><li><a class="l" href="#pfd5" data-dest-detail='[213,"XYZ",-48,486,1]'>Know Your Library</a><ul><li><a class="l" href="#pfd5" data-dest-detail='[213,"XYZ",-48,454,1]'>Thread-Safe Collections</a></li></ul></li><li><a class="l" href="#pfd6" data-dest-detail='[214,"XYZ",-48,671,1]'>Know Your Execution Models</a><ul><li><a class="l" href="#pfd7" data-dest-detail='[215,"XYZ",-48,671,1]'>Producer-Consumer</a></li><li><a class="l" href="#pfd7" data-dest-detail='[215,"XYZ",-48,639,1]'>Readers-Writers</a></li><li><a class="l" href="#pfd7" data-dest-detail='[215,"XYZ",-48,454,1]'>Dining Philosophers</a></li></ul></li><li><a class="l" href="#pfd8" data-dest-detail='[216,"XYZ",-48,671,1]'>Beware Dependencies Between Synchronized Methods</a></li><li><a class="l" href="#pfd8" data-dest-detail='[216,"XYZ",-48,454,1]'>Keep Synchronized Sections Small</a></li><li><a class="l" href="#pfd9" data-dest-detail='[217,"XYZ",-48,671,1]'>Writing Correct Shut-Down Code Is Hard</a></li><li><a class="l" href="#pfd9" data-dest-detail='[217,"XYZ",-48,454,1]'>Testing Threaded Code</a><ul><li><a class="l" href="#pfda" data-dest-detail='[218,"XYZ",-48,671,1]'>Treat Spurious Failures as Candidate Threading Issues</a></li><li><a class="l" href="#pfda" data-dest-detail='[218,"XYZ",-48,639,1]'>Get Your Nonthreaded Code Working First</a></li><li><a class="l" href="#pfda" data-dest-detail='[218,"XYZ",-48,486,1]'>Make Your Threaded Code Pluggable</a></li><li><a class="l" href="#pfda" data-dest-detail='[218,"XYZ",-48,454,1]'>Make Your Threaded Code Tunable</a></li><li><a class="l" href="#pfdb" data-dest-detail='[219,"XYZ",-48,671,1]'>Run with More Threads Than Processors</a></li><li><a class="l" href="#pfdb" data-dest-detail='[219,"XYZ",-48,639,1]'>Run on Different Platforms</a></li><li><a class="l" href="#pfdb" data-dest-detail='[219,"XYZ",-48,454,1]'>Instrument Your Code to Try and Force Failures</a></li><li><a class="l" href="#pfdc" data-dest-detail='[220,"XYZ",-48,671,1]'>Hand-Coded</a></li><li><a class="l" href="#pfdc" data-dest-detail='[220,"XYZ",-48,454,1]'>Automated</a></li></ul></li><li><a class="l" href="#pfdd" data-dest-detail='[221,"XYZ",-48,454,1]'>Conclusion</a></li><li><a class="l" href="#pfde" data-dest-detail='[222,"XYZ",-48,454,1]'>Bibliography</a></li></ul></li><li><a class="l" href="#pfe0" data-dest-detail='[224,"XYZ",-48,671,1]'>Chapter 14: Successive Refinement</a><ul><li><a class="l" href="#pfe1" data-dest-detail='[225,"XYZ",-48,454,1]'>Args Implementation</a><ul><li><a class="l" href="#pfe7" data-dest-detail='[231,"XYZ",-48,454,1]'>How Did I Do This?</a></li></ul></li><li><a class="l" href="#pfe8" data-dest-detail='[232,"XYZ",-48,671,1]'>Args: The Rough Draft</a><ul><li><a class="l" href="#pff3" data-dest-detail='[243,"XYZ",-48,486,1]'>So I Stopped</a></li><li><a class="l" href="#pff3" data-dest-detail='[243,"XYZ",-48,454,1]'>On Incrementalism</a></li></ul></li><li><a class="l" href="#pff5" data-dest-detail='[245,"XYZ",-48,454,1]'>String Arguments</a></li><li><a class="l" href="#pf119" data-dest-detail='[281,"XYZ",-48,671,1]'>Conclusion</a></li></ul></li><li><a class="l" href="#pf11a" data-dest-detail='[282,"XYZ",-48,671,1]'>Chapter 15: JUnit Internals</a><ul><li><a class="l" href="#pf11b" data-dest-detail='[283,"XYZ",-48,671,1]'>The JUnit Framework</a></li><li><a class="l" href="#pf128" data-dest-detail='[296,"XYZ",-48,671,1]'>Conclusion</a></li></ul></li><li><a class="l" href="#pf12a" data-dest-detail='[298,"XYZ",-48,671,1]'>Chapter 16: Refactoring SerialDate</a><ul><li><a class="l" href="#pf12b" data-dest-detail='[299,"XYZ",-48,454,1]'>First, Make It Work</a></li><li><a class="l" href="#pf12d" data-dest-detail='[301,"XYZ",-48,671,1]'>Then Make It Right</a></li><li><a class="l" href="#pf13b" data-dest-detail='[315,"XYZ",-48,671,1]'>Conclusion</a></li><li><a class="l" href="#pf13b" data-dest-detail='[315,"XYZ",-48,639,1]'>Bibliography</a></li></ul></li><li><a class="l" href="#pf13c" data-dest-detail='[316,"XYZ",-48,671,1]'>Chapter 17: Smells and Heuristics</a><ul><li><a class="l" href="#pf13d" data-dest-detail='[317,"XYZ",-48,671,1]'>Comments</a><ul><li><a class="l" href="#pf13d" data-dest-detail='[317,"XYZ",-48,639,1]'>C1: Inappropriate Information</a></li><li><a class="l" href="#pf13d" data-dest-detail='[317,"XYZ",-48,486,1]'>C2: Obsolete Comment</a></li><li><a class="l" href="#pf13d" data-dest-detail='[317,"XYZ",-48,454,1]'>C3: Redundant Comment</a></li><li><a class="l" href="#pf13e" data-dest-detail='[318,"XYZ",-48,671,1]'>C4: Poorly Written Comment</a></li><li><a class="l" href="#pf13e" data-dest-detail='[318,"XYZ",-48,639,1]'>C5: Commented-Out Code</a></li></ul></li><li><a class="l" href="#pf13e" data-dest-detail='[318,"XYZ",-48,518,1]'>Environment</a><ul><li><a class="l" href="#pf13e" data-dest-detail='[318,"XYZ",-48,486,1]'>E1: Build Requires More Than One Step</a></li><li><a class="l" href="#pf13e" data-dest-detail='[318,"XYZ",-48,454,1]'>E2: Tests Require More Than One Step</a></li></ul></li><li><a class="l" href="#pf13f" data-dest-detail='[319,"XYZ",-48,671,1]'>Functions</a><ul><li><a class="l" href="#pf13f" data-dest-detail='[319,"XYZ",-48,639,1]'>F1: Too Many Arguments</a></li><li><a class="l" href="#pf13f" data-dest-detail='[319,"XYZ",-48,607,1]'>F2: Output Arguments</a></li><li><a class="l" href="#pf13f" data-dest-detail='[319,"XYZ",-48,575,1]'>F3: Flag Arguments</a></li><li><a class="l" href="#pf13f" data-dest-detail='[319,"XYZ",-48,543,1]'>F4: Dead Function</a></li></ul></li><li><a class="l" href="#pf13f" data-dest-detail='[319,"XYZ",-48,518,1]'>General</a><ul><li><a class="l" href="#pf13f" data-dest-detail='[319,"XYZ",-48,486,1]'>G1: Multiple Languages in One Source File</a></li><li><a class="l" href="#pf13f" data-dest-detail='[319,"XYZ",-48,454,1]'>G2: Obvious Behavior Is Unimplemented</a></li><li><a class="l" href="#pf140" data-dest-detail='[320,"XYZ",-48,671,1]'>G3: Incorrect Behavior at the Boundaries</a></li><li><a class="l" href="#pf140" data-dest-detail='[320,"XYZ",-48,639,1]'>G4: Overridden Safeties</a></li><li><a class="l" href="#pf140" data-dest-detail='[320,"XYZ",-48,454,1]'>G5: Duplication</a></li><li><a class="l" href="#pf141" data-dest-detail='[321,"XYZ",-48,671,1]'>G6: Code at Wrong Level of Abstraction</a></li><li><a class="l" href="#pf142" data-dest-detail='[322,"XYZ",-48,671,1]'>G7: Base Classes Depending on Their Derivatives</a></li><li><a class="l" href="#pf142" data-dest-detail='[322,"XYZ",-48,454,1]'>G8: Too Much Information</a></li><li><a class="l" href="#pf143" data-dest-detail='[323,"XYZ",-48,671,1]'>G9: Dead Code</a></li><li><a class="l" href="#pf143" data-dest-detail='[323,"XYZ",-48,486,1]'>G10: Vertical Separation</a></li><li><a class="l" href="#pf143" data-dest-detail='[323,"XYZ",-48,454,1]'>G11: Inconsistency</a></li><li><a class="l" href="#pf144" data-dest-detail='[324,"XYZ",-48,671,1]'>G12: Clutter</a></li><li><a class="l" href="#pf144" data-dest-detail='[324,"XYZ",-48,639,1]'>G13: Artificial Coupling</a></li><li><a class="l" href="#pf144" data-dest-detail='[324,"XYZ",-48,454,1]'>G14: Feature Envy</a></li><li><a class="l" href="#pf145" data-dest-detail='[325,"XYZ",-48,454,1]'>G15: Selector Arguments</a></li><li><a class="l" href="#pf146" data-dest-detail='[326,"XYZ",-48,671,1]'>G16: Obscured Intent</a></li><li><a class="l" href="#pf146" data-dest-detail='[326,"XYZ",-48,454,1]'>G17: Misplaced Responsibility</a></li><li><a class="l" href="#pf147" data-dest-detail='[327,"XYZ",-48,671,1]'>G18: Inappropriate Static</a></li><li><a class="l" href="#pf147" data-dest-detail='[327,"XYZ",-48,454,1]'>G19: Use Explanatory Variables</a></li><li><a class="l" href="#pf148" data-dest-detail='[328,"XYZ",-48,671,1]'>G20: Function Names Should Say What They Do</a></li><li><a class="l" href="#pf148" data-dest-detail='[328,"XYZ",-48,454,1]'>G21: Understand the Algorithm</a></li><li><a class="l" href="#pf149" data-dest-detail='[329,"XYZ",-48,671,1]'>G22: Make Logical Dependencies Physical</a></li><li><a class="l" href="#pf14a" data-dest-detail='[330,"XYZ",-48,486,1]'>G23: Prefer Polymorphism to If/Else or Switch/Case</a></li><li><a class="l" href="#pf14a" data-dest-detail='[330,"XYZ",-48,454,1]'>G24: Follow Standard Conventions</a></li><li><a class="l" href="#pf14b" data-dest-detail='[331,"XYZ",-48,671,1]'>G25: Replace Magic Numbers with Named Constants</a></li><li><a class="l" href="#pf14c" data-dest-detail='[332,"XYZ",-48,671,1]'>G26: Be Precise</a></li><li><a class="l" href="#pf14c" data-dest-detail='[332,"XYZ",-48,486,1]'>G27: Structure over Convention</a></li><li><a class="l" href="#pf14c" data-dest-detail='[332,"XYZ",-48,454,1]'>G28: Encapsulate Conditionals</a></li><li><a class="l" href="#pf14d" data-dest-detail='[333,"XYZ",-48,671,1]'>G29: Avoid Negative Conditionals</a></li><li><a class="l" href="#pf14d" data-dest-detail='[333,"XYZ",-48,639,1]'>G30: Functions Should Do One Thing</a></li><li><a class="l" href="#pf14d" data-dest-detail='[333,"XYZ",-48,454,1]'>G31: Hidden Temporal Couplings</a></li><li><a class="l" href="#pf14e" data-dest-detail='[334,"XYZ",-48,454,1]'>G32: Don&apos;t Be Arbitrary</a></li><li><a class="l" href="#pf14f" data-dest-detail='[335,"XYZ",-48,671,1]'>G33: Encapsulate Boundary Conditions</a></li><li><a class="l" href="#pf14f" data-dest-detail='[335,"XYZ",-48,454,1]'>G34: Functions Should Descend Only One Level of Abstraction</a></li><li><a class="l" href="#pf151" data-dest-detail='[337,"XYZ",-48,671,1]'>G35: Keep Congurable Data at High Levels</a></li><li><a class="l" href="#pf151" data-dest-detail='[337,"XYZ",-48,454,1]'>G36: Avoid Transitive Navigation</a></li></ul></li><li><a class="l" href="#pf152" data-dest-detail='[338,"XYZ",-48,671,1]'>Java</a><ul><li><a class="l" href="#pf152" data-dest-detail='[338,"XYZ",-48,639,1]'>J1: Avoid Long Import Lists by Using Wildcards</a></li><li><a class="l" href="#pf152" data-dest-detail='[338,"XYZ",-48,454,1]'>J2: Don&apos;t Inherit Constants</a></li><li><a class="l" href="#pf153" data-dest-detail='[339,"XYZ",-48,454,1]'>J3: Constants versus Enums</a></li></ul></li><li><a class="l" href="#pf154" data-dest-detail='[340,"XYZ",-48,486,1]'>Names</a><ul><li><a class="l" href="#pf154" data-dest-detail='[340,"XYZ",-48,454,1]'>N1: Choose Descriptive Names</a></li><li><a class="l" href="#pf156" data-dest-detail='[342,"XYZ",-48,671,1]'>N2: Choose Names at the Appropriate Level of Abstraction</a></li><li><a class="l" href="#pf156" data-dest-detail='[342,"XYZ",-48,454,1]'>N3: Use Standard Nomenclature Where Possible</a></li><li><a class="l" href="#pf157" data-dest-detail='[343,"XYZ",-48,671,1]'>N4: Unambiguous Names</a></li><li><a class="l" href="#pf157" data-dest-detail='[343,"XYZ",-48,486,1]'>N5: Use Long Names for Long Scopes</a></li><li><a class="l" href="#pf157" data-dest-detail='[343,"XYZ",-48,454,1]'>N6: Avoid Encodings</a></li><li><a class="l" href="#pf158" data-dest-detail='[344,"XYZ",-48,671,1]'>N7: Names Should Describe Side-Effects</a></li></ul></li><li><a class="l" href="#pf158" data-dest-detail='[344,"XYZ",-48,639,1]'>Tests</a><ul><li><a class="l" href="#pf158" data-dest-detail='[344,"XYZ",-48,607,1]'>T1: Insufficient Tests</a></li><li><a class="l" href="#pf158" data-dest-detail='[344,"XYZ",-48,575,1]'>T2: Use a Coverage Tool!</a></li><li><a class="l" href="#pf158" data-dest-detail='[344,"XYZ",-48,486,1]'>T3: Don&apos;t Skip Trivial Tests</a></li><li><a class="l" href="#pf158" data-dest-detail='[344,"XYZ",-48,454,1]'>T4: An Ignored Test Is a Question about an Ambiguity</a></li><li><a class="l" href="#pf159" data-dest-detail='[345,"XYZ",-48,671,1]'>T5: Test Boundary Conditions</a></li><li><a class="l" href="#pf159" data-dest-detail='[345,"XYZ",-48,639,1]'>T6: Exhaustively Test Near Bugs</a></li><li><a class="l" href="#pf159" data-dest-detail='[345,"XYZ",-48,607,1]'>T7: Patterns of Failure Are Revealing</a></li><li><a class="l" href="#pf159" data-dest-detail='[345,"XYZ",-48,518,1]'>T8: Test Coverage Patterns Can Be Revealing</a></li><li><a class="l" href="#pf159" data-dest-detail='[345,"XYZ",-48,486,1]'>T9: Tests Should Be Fast</a></li></ul></li><li><a class="l" href="#pf159" data-dest-detail='[345,"XYZ",-48,454,1]'>Conclusion</a></li><li><a class="l" href="#pf15a" data-dest-detail='[346,"XYZ",-48,671,1]'>Bibliography</a></li></ul></li><li><a class="l" href="#pf15c" data-dest-detail='[348,"XYZ",-48,671,1]'>Appendix A: Concurrency II</a><ul><li><a class="l" href="#pf15c" data-dest-detail='[348,"XYZ",-48,486,1]'>Client/Server Example</a><ul><li><a class="l" href="#pf15c" data-dest-detail='[348,"XYZ",-48,454,1]'>The Server</a></li><li><a class="l" href="#pf15e" data-dest-detail='[350,"XYZ",-48,671,1]'>Adding Threading</a></li><li><a class="l" href="#pf15e" data-dest-detail='[350,"XYZ",-48,454,1]'>Server Observations</a></li><li><a class="l" href="#pf160" data-dest-detail='[352,"XYZ",-48,671,1]'>Conclusion</a></li></ul></li><li><a class="l" href="#pf160" data-dest-detail='[352,"XYZ",-48,454,1]'>Possible Paths of Execution</a><ul><li><a class="l" href="#pf161" data-dest-detail='[353,"XYZ",-48,671,1]'>Number of Paths</a></li><li><a class="l" href="#pf162" data-dest-detail='[354,"XYZ",-48,454,1]'>Digging Deeper</a></li><li><a class="l" href="#pf165" data-dest-detail='[357,"XYZ",-48,671,1]'>Conclusion</a></li></ul></li><li><a class="l" href="#pf165" data-dest-detail='[357,"XYZ",-48,486,1]'>Knowing Your Library</a><ul><li><a class="l" href="#pf165" data-dest-detail='[357,"XYZ",-48,454,1]'>Executor Framework</a></li><li><a class="l" href="#pf166" data-dest-detail='[358,"XYZ",-48,671,1]'>Nonblocking Solutions</a></li><li><a class="l" href="#pf167" data-dest-detail='[359,"XYZ",-48,454,1]'>Nonthread-Safe Classes</a></li></ul></li><li><a class="l" href="#pf168" data-dest-detail='[360,"XYZ",-48,454,1]'>Dependencies Between Methods Can Break Concurrent Code</a><ul><li><a class="l" href="#pf169" data-dest-detail='[361,"XYZ",-48,486,1]'>Tolerate the Failure</a></li><li><a class="l" href="#pf169" data-dest-detail='[361,"XYZ",-48,454,1]'>Client-Based Locking</a></li><li><a class="l" href="#pf16b" data-dest-detail='[363,"XYZ",-48,671,1]'>Server-Based Locking</a></li></ul></li><li><a class="l" href="#pf16c" data-dest-detail='[364,"XYZ",-48,454,1]'>Increasing Throughput</a><ul><li><a class="l" href="#pf16d" data-dest-detail='[365,"XYZ",-48,454,1]'>Single-Thread Calculation of Throughput</a></li><li><a class="l" href="#pf16e" data-dest-detail='[366,"XYZ",-48,671,1]'>Multithread Calculation of Throughput</a></li></ul></li><li><a class="l" href="#pf16e" data-dest-detail='[366,"XYZ",-48,454,1]'>Deadlock</a><ul><li><a class="l" href="#pf16f" data-dest-detail='[367,"XYZ",-48,454,1]'>Mutual Exclusion</a></li><li><a class="l" href="#pf170" data-dest-detail='[368,"XYZ",-48,671,1]'>Lock &amp; Wait</a></li><li><a class="l" href="#pf170" data-dest-detail='[368,"XYZ",-48,639,1]'>No Preemption</a></li><li><a class="l" href="#pf170" data-dest-detail='[368,"XYZ",-48,607,1]'>Circular Wait</a></li><li><a class="l" href="#pf170" data-dest-detail='[368,"XYZ",-48,454,1]'>Breaking Mutual Exclusion</a></li><li><a class="l" href="#pf171" data-dest-detail='[369,"XYZ",-48,671,1]'>Breaking Lock &amp; Wait</a></li><li><a class="l" href="#pf171" data-dest-detail='[369,"XYZ",-48,639,1]'>Breaking Preemption</a></li><li><a class="l" href="#pf171" data-dest-detail='[369,"XYZ",-48,454,1]'>Breaking Circular Wait</a></li></ul></li><li><a class="l" href="#pf172" data-dest-detail='[370,"XYZ",-48,671,1]'>Testing Multithreaded Code</a></li><li><a class="l" href="#pf175" data-dest-detail='[373,"XYZ",-48,671,1]'>Tool Support for Testing Thread-Based Code</a></li><li><a class="l" href="#pf175" data-dest-detail='[373,"XYZ",-48,454,1]'>Conclusion</a></li><li><a class="l" href="#pf176" data-dest-detail='[374,"XYZ",-48,671,1]'>Tutorial: Full Code Examples</a><ul><li><a class="l" href="#pf176" data-dest-detail='[374,"XYZ",-48,639,1]'>Client/Server Nonthreaded</a></li><li><a class="l" href="#pf179" data-dest-detail='[377,"XYZ",-48,454,1]'>Client/Server Using Threads</a></li></ul></li></ul></li><li><a class="l" href="#pf17c" data-dest-detail='[380,"XYZ",-48,671,1]'>Appendix B: org.jfree.date.SerialDate</a></li><li><a class="l" href="#pf1b8" data-dest-detail='[440,"XYZ",-48,671,1]'>Appendix C: Cross References of Heuristics</a></li><li><a class="l" href="#pf1ba" data-dest-detail='[442,"XYZ",-48,671,1]'>Epilogue</a></li><li><a class="l" href="#pf1bc" data-dest-detail='[444,"XYZ",-48,671,1]'>Index</a><ul><li><a class="l" href="#pf1bc" data-dest-detail='[444,"XYZ",-48,639,1]'>A</a></li><li><a class="l" href="#pf1bd" data-dest-detail='[445,"XYZ",-48,454,1]'>B</a></li><li><a class="l" href="#pf1be" data-dest-detail='[446,"XYZ",-48,671,1]'>C</a></li><li><a class="l" href="#pf1c0" data-dest-detail='[448,"XYZ",-48,454,1]'>D</a></li><li><a class="l" href="#pf1c2" data-dest-detail='[450,"XYZ",-48,671,1]'>E</a></li><li><a class="l" href="#pf1c2" data-dest-detail='[450,"XYZ",-48,454,1]'>F</a></li><li><a class="l" href="#pf1c3" data-dest-detail='[451,"XYZ",-48,454,1]'>G</a></li><li><a class="l" href="#pf1c4" data-dest-detail='[452,"XYZ",-48,671,1]'>H</a></li><li><a class="l" href="#pf1c4" data-dest-detail='[452,"XYZ",-48,454,1]'>I</a></li><li><a class="l" href="#pf1c5" data-dest-detail='[453,"XYZ",-48,518,1]'>J</a></li><li><a class="l" href="#pf1c5" data-dest-detail='[453,"XYZ",-48,486,1]'>K</a></li><li><a class="l" href="#pf1c5" data-dest-detail='[453,"XYZ",-48,454,1]'>L</a></li><li><a class="l" href="#pf1c6" data-dest-detail='[454,"XYZ",-48,454,1]'>M</a></li><li><a class="l" href="#pf1c7" data-dest-detail='[455,"XYZ",-48,671,1]'>N</a></li><li><a class="l" href="#pf1c7" data-dest-detail='[455,"XYZ",-48,454,1]'>O</a></li><li><a class="l" href="#pf1c8" data-dest-detail='[456,"XYZ",-48,454,1]'>P</a></li><li><a class="l" href="#pf1c9" data-dest-detail='[457,"XYZ",-48,486,1]'>Q</a></li><li><a class="l" href="#pf1c9" data-dest-detail='[457,"XYZ",-48,454,1]'>R</a></li><li><a class="l" href="#pf1ca" data-dest-detail='[458,"XYZ",-48,671,1]'>S</a></li><li><a class="l" href="#pf1cc" data-dest-detail='[460,"XYZ",-48,671,1]'>T</a></li><li><a class="l" href="#pf1cd" data-dest-detail='[461,"XYZ",-48,486,1]'>U</a></li><li><a class="l" href="#pf1cd" data-dest-detail='[461,"XYZ",-48,454,1]'>V</a></li><li><a class="l" href="#pf1ce" data-dest-detail='[462,"XYZ",-47,671,1]'>W</a></li><li><a class="l" href="#pf1ce" data-dest-detail='[462,"XYZ",-47,639,1]'>X</a></li></ul></li></ul>